{"ast":null,"code":"var _jsxFileName = \"/Users/husseinrazian/Desktop/BrainStation/Assignments/Week 5 and 6/hussein-razian-brainflix/sprint three/client/src/components/MainVideoPage/MainVideoPage.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport { Route, Switch } from 'react-router-dom';\nimport PageHeader from '../PageHeader/PageHeader';\nimport PageUploadVideo from '../PageUploadVideo/PageUploadVideo';\nimport PageCurrentVideo from '../PageCurrentVideo/PageCurrentVideo';\nimport PageVideoContent from '../PageVideoContent/PageVideoContent';\nimport PageCommentsForm from '../PageCommentsForm/PageCommentsForm';\nimport EnteredComments from '../PageEnteredComments/PageEnteredComments';\nimport PageNextVideo from '../PageNextVideo/PageNextVideo';\nimport './mainVideoPage.scss';\n\nclass MainVideoPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeVideo: [],\n      videos: []\n    };\n\n    this.addVideo = e => {\n      e.preventDefault();\n      let newVideo = {\n        id: uuid.v4(),\n        title: e.target.title.value,\n        channel: 'BrainFlix Developer',\n        image: /*#__PURE__*/React.createElement(\"img\", {\n          src: UploadPhoto,\n          alt: \"upload-photo\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 16\n          }\n        }),\n        description: e.target.description.value,\n        views: '1,000,000',\n        likes: '100,000',\n        duration: '7:00',\n        video: \"https://project-2-api.herokuapp.com/stream\",\n        timestamp: '1991/02/17',\n        comments: [{\n          name: \"Theodore Duncan\",\n          comment: \"How can someone be so good!!! You can tell he lives for this and loves to do it every day. Everytime I see him I feel instantly happy! Heâ€™s definitely my favorite ever!\",\n          id: \"993f950f-df99-48e7-bd1e-d95003cc98f1\",\n          likes: 0,\n          timestamp: 1542262984046\n        }]\n      };\n      axios.post('/videos', newVideo).then(res => {\n        this.setState({\n          videos: res.data\n        });\n        console.log(this.state.videos);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/videos').then(res => {\n      this.setState({\n        videos: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get('/videos/1af0jruup5gu').then(res => {\n      this.setState({\n        activeVideo: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidUpdate() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    if (this.state.activeVideo.id !== params.id) axios.get(`/videos/${params.id}`).then(res => {\n      console.log(JSON.stringify(res));\n      this.setState({\n        activeVideo: res.data\n      });\n      window.scrollTo(0, 0);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/upload\",\n      render: () => /*#__PURE__*/React.createElement(PageUploadVideo, {\n        addVideo: this.addVideo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 55\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PageCurrentVideo, {\n      currentVideo: this.state.activeVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"videontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"video-content__current\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PageVideoContent, {\n      currentVideo: this.state.activeVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(PageCommentsForm, {\n      currentVideo: this.state.activeVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-entries\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, this.state.activeVideo.comments && this.state.activeVideo.comments.map(comment => {\n      return /*#__PURE__*/React.createElement(EnteredComments, {\n        key: comment.id,\n        id: comment.id,\n        name: comment.name,\n        date: comment.timestamp,\n        comment: comment.comment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 32\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(\"aside\", {\n      className: \"next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"next__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, \"NEXT VIDEO\"), this.state.videos.filter(video => video.id !== this.state.activeVideo.id).map(video => {\n      return /*#__PURE__*/React.createElement(PageNextVideo, {\n        key: video.id,\n        id: video.id,\n        videoTitle: video.title,\n        channelTitle: video.channel,\n        videoImage: video.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 30\n        }\n      });\n    }))))));\n  }\n\n}\n\n;\nexport default MainVideoPage;","map":{"version":3,"sources":["/Users/husseinrazian/Desktop/BrainStation/Assignments/Week 5 and 6/hussein-razian-brainflix/sprint three/client/src/components/MainVideoPage/MainVideoPage.jsx"],"names":["React","axios","uuid","Route","Switch","PageHeader","PageUploadVideo","PageCurrentVideo","PageVideoContent","PageCommentsForm","EnteredComments","PageNextVideo","MainVideoPage","Component","state","activeVideo","videos","addVideo","e","preventDefault","newVideo","id","v4","title","target","value","channel","image","UploadPhoto","description","views","likes","duration","video","timestamp","comments","name","comment","post","then","res","setState","data","console","log","componentDidMount","get","catch","err","componentDidUpdate","match","params","props","JSON","stringify","window","scrollTo","render","map","filter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport {Route, Switch} from 'react-router-dom';\nimport PageHeader from '../PageHeader/PageHeader';\nimport PageUploadVideo from '../PageUploadVideo/PageUploadVideo';\nimport PageCurrentVideo from '../PageCurrentVideo/PageCurrentVideo';\nimport PageVideoContent from '../PageVideoContent/PageVideoContent';\nimport PageCommentsForm from '../PageCommentsForm/PageCommentsForm';\nimport EnteredComments from '../PageEnteredComments/PageEnteredComments';\nimport PageNextVideo from '../PageNextVideo/PageNextVideo';\nimport './mainVideoPage.scss';\n\nclass MainVideoPage extends React.Component {\n  state = {\n    activeVideo:[], \n\n    videos: [],\n\n    };\n\n    componentDidMount() {\n\n      axios\n      .get ('/videos')\n\n      .then(res=> {\n          this.setState({\n              videos: res.data\n          })\n      })\n\n      .catch(err=> {console.log(err)})\n\n      axios\n      .get ('/videos/1af0jruup5gu')\n\n      .then(res=> {\n          this.setState({\n              activeVideo: res.data\n          })\n      })\n\n      .catch(err=> {console.log(err)})\n    }\n\n    componentDidUpdate () {\n      const {match: {params}} = this.props;\n      if(this.state.activeVideo.id !== params.id)\n      axios\n      .get (`/videos/${params.id}`)\n      .then(res=> {\n\n        console.log(JSON.stringify(res))\n          this.setState({\n              activeVideo: res.data\n          })\n          window.scrollTo(0,0)\n      })\n      .catch(err=> {console.log(err)})\n    }\n\n    addVideo = (e) => {\n      e.preventDefault();\n      let newVideo = {\n        id: uuid.v4(),\n        title: e.target.title.value,\n        channel: 'BrainFlix Developer',\n        image: <img src={UploadPhoto} alt = \"upload-photo\"/>,\n        description: e.target.description.value,\n        views: '1,000,000',\n        likes: '100,000',\n        duration: '7:00',\n        video: \"https://project-2-api.herokuapp.com/stream\",\n        timestamp: '1991/02/17',\n        comments: [\n          {\n            name: \"Theodore Duncan\",\n            comment: \"How can someone be so good!!! You can tell he lives for this and loves to do it every day. Everytime I see him I feel instantly happy! Heâ€™s definitely my favorite ever!\",\n            id: \"993f950f-df99-48e7-bd1e-d95003cc98f1\",\n            likes: 0,\n            timestamp: 1542262984046\n        }\n        ]\n      }\n\n      axios\n      .post('/videos', newVideo)\n      \n      .then (res=> {\n        this.setState({\n          videos: res.data\n        })\n        console.log(this.state.videos)\n      })\n    }\n\n    render()\n    {\n    return (\n      <>\n      <PageHeader />\n        <Switch>\n          <Route exact path=\"/upload\"  render = {()=> <PageUploadVideo addVideo = {this.addVideo}/> }/>\n          {/* <Route exact path=\"/upload\" component = {PageUploadVideo}/> */}\n            <main>\n              <PageCurrentVideo\n                currentVideo={this.state.activeVideo} />\n              <section className=\"videontent\">\n                <div className=\"video-content__current\">\n                  <PageVideoContent\n                    currentVideo={this.state.activeVideo} />\n                  <PageCommentsForm currentVideo={this.state.activeVideo}/>\n                  <div className=\"comment-entries\">\n                    {this.state.activeVideo.comments && this.state.activeVideo.comments.map (comment => {\n                        return <EnteredComments \n                        key={comment.id} \n                        id={comment.id} \n                        name={comment.name} \n                        date={comment.timestamp} \n                        comment={comment.comment}/>\n                    })}\n                  </div>\n                </div>\n                <aside className=\"next\">\n                  <h3 className=\"next__header\">NEXT VIDEO</h3>\n                    {this.state.videos\n                    .filter(video => video.id !== this.state.activeVideo.id)\n                    .map (video => {\n                      return <PageNextVideo \n                      key={video.id}\n                      id={video.id}  \n                      videoTitle={video.title} \n                      channelTitle={video.channel} \n                      videoImage={video.image}/>\n                    })}\n                </aside>\n              </section>\n            </main>\n          </Switch>\n        </>\n    );\n  };\n};\n\nexport default MainVideoPage;"]},"metadata":{},"sourceType":"module"}